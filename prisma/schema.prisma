// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String?
  email     String    @unique
  password  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[] 
  plans     Plan[] 
  role      Role      
  avatar    String?   @default("./images/unused-profile-preview.jpg")
  idCompany Int?
  company   Company? @relation(fields: [idCompany], references: [id])
}

model Company{
  id        Int       @id @default(autoincrement())
  name      String
  leaderId  Int       @unique //Чтобы юзер не имел несколько компаний
  about     String?   @default("Нет описания")
  employee  User[]
}

model Product {
 id          Int       @id @default(autoincrement())
 image       String?   @default("./images/unused-service-preview.jpg")
 createdAt   DateTime  @default(now())
 updatedAt   DateTime  @updatedAt
 places      String    
//  category    String
 duration    String
 title       String?
 cost        String?
 description String
 authorId    Int
 author      User      @relation(fields: [authorId], references: [id])
 isPublished Boolean   @default(false)
 productPlan Plan[]
 categoryId  Int
 category    Category  @relation(fields: [categoryId], references: [id])
 isOnline    Boolean?  @default(false)
} 

model Plan{
  id          Int       @id @default(autoincrement())
  clientId    Int?  
  datetime    DateTime  // datetime    String
  idProduct   Int
  client      User?     @relation(fields: [clientId], references: [id])
  product     Product   @relation(fields: [idProduct], references: [id])  
}

model Category{
  id           Int       @id @default(autoincrement())
  name         String
  label        String    @unique
  description  String
  products     Product[] 
}

enum Role {
  User
  Employee
  Leader
  Admin
}
